#
# Valores para testes locais com o k3d.
# 
# O que executa:
# - Ingress controller (ingress-nginx)
# - Aplicação "whoami"
# - Loki
# - Grafana
# - Prometheus
#
# INSTALAÇÃO COM MAKEFILE:
#
# make k3d_create
# make example_local_loki_grafana
# make get_grafana_secret
#
# INSTALAÇÃO VIA HELM (manual):
#
# helm upgrade -i vkpr -f examples/local/values-local-loki-grafana.yaml ./charts/vkpr
# kubectl get secret vkpr-grafana -o jsonpath="{.data.admin-password}" | base64 --decode ; echo
#
# Coloque as seguintes entradas no /etc/hosts :
# 127.0.0.1    grafana.localdomain
#
# Abrir a seguinte URL no browser:
#
# http://grafana.localdomain:8080
#

#
# INGRESS STACK
#
ingress-nginx:
  enabled: true

external-dns:
  enabled: false
cert-manager:
  enabled: false

# chart values
ingress:
  enabled: true
  annotations:
    ingress.kubernetes.io/ssl-redirect: "false"
  hosts:
  - host: whoami.localdomain
    paths: ["/"]

#
# LOGGING STACK:
#

loki-stack:
  enabled: true
  grafana:
    enabled: false

#
# MONITORING STACK
#
kube-prometheus-stack:
  enabled: true
  ## Manages Prometheus and Alertmanager components
  prometheusOperator:
    enabled: true
    ## CRDs são mandatórios no Helm 3 (ignorar as duas linhas abaixo)
    createCustomResource: false
    cleanupCustomResource: false
  prometheus:
    enabled: true
  alertmanager:
    enabled: false
  grafana:
    enabled: true
    sidecar:
      datasources:
        enabled: true
    persistence:
      enabled: false
    ingress:
      enabled: true
      hosts:
      - grafana.localdomain
  ## Component scraping the kube api server
  kubeApiServer:
    enabled: true
  ## Component scraping the kubelet and kubelet-hosted cAdvisor
  kubelet:
    enabled: true
  ## Component scraping the kube controller manager
  kubeControllerManager:
    enabled: true
  ## Component scraping coreDns. Use either this or kubeDns
  coreDns:
    enabled: true
  ## Component scraping kubeDns. Use either this or coreDns
  kubeDns:
    enabled: false
  ## Component scraping etcd
  kubeEtcd:
    enabled: true
  ## Component scraping kube scheduler
  kubeScheduler:
    enabled: true
  ## Component scraping kube proxy
  kubeProxy:
    enabled: true
  ## Component scraping kube state metrics
  kubeStateMetrics:
    enabled: true

#
# SECURITY STACK
#
vault:
  enabled: false

keycloak:
  enabled: false
