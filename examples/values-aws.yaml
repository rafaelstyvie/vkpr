#
# Valores para testes na digitalocean do chart e de suas dependÃªncias.
# Note o uso de dois LBs (kong/apis e traefik/webapps).
# NAO CONFUNDIR com o values.yaml interno do Chart que define seus defaults.
#
# O token da digitalocean deve ser fornecido na linha de comando:
#
# helm upgrade -i -f values-do.yaml vkpr ./vkpr \
#   --set external-dns.digitalocean.apiToken=$DO_AUTH_TOKEN

#
# INGRESS STACK
#
nginx-ingress:
  enabled: true
  controller:
    publishService:
      enabled: true
#    autoscaling:
#      enabled: true
#      minReplicas: 1
#      maxReplicas: 3
#    service:
#      annotations:
#        external-dns.alpha.kubernetes.io/hostname: "ipaas.api.vertigo.com.br"

external-dns:
  enabled: false
  rbac:
    create: false
  sources:
    - ingress
    - service
  provider: digitalocean
  interval: "1m"

cert-manager:
  enabled: false
  ingressShim:
    defaultIssuerName: letsencrypt-production
    defaultIssuerKind: ClusterIssuer
    defaultIssuerGroup: cert-manager.io

# dados para o CRD do ACME
acme:
  email: andre@vertigo.com.br

# chart values
ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
  hosts:
  - host: whoami.api.vertigo.com.br
    paths: ["/"]
  tls:
  - hosts:
    - whoami.api.vertigo.com.br
    secretName: whoami-cert

#
# LOGGING STACK
#
# ELK - COMENTADO
# fluentd-elasticsearch:
#   enabled: false
#   elasticsearch:
#     host: elasticsearch-master
# elasticsearch:
#   enabled: false
# kibana:
#   enabled: false
#   ingress:
#     enabled: true
#     annotations:
#       kubernetes.io/ingress.class: nginx
#       kubernetes.io/tls-acme: "true"
#     path: /
#     hosts:
#       - kibana.api.vertigo.com.br
#     tls:
#     - hosts:
#       - kibana.api.vertigo.com.br
#       secretName: kibana-vkpr-cert

# GRAYLOG
#
# tags do subchart graylog - SAO TOP LEVEL SEMPRE
tags:
  install-elasticsearch: false
  install-mongodb: false
elasticsearch:
  enabled: false
  volumeClaimTemplate:
    storageClassName: "gp2"
# mongodb do graylog
mongodb-replicaset:
  enabled: false
  replicas: 1
graylog:
  enabled: false
  graylog:
    elasticsearch:
      hosts: "http://elasticsearch-master:9200"
    mongodb:
      uri: mongodb://vkpr-mongodb-replicaset-client:27017/databasename?replicaSet=rs0
    rootPassword: vert1234vert1234
    input:
      tcp:
        service:
          type: ClusterIP
        ports:
          - name: gelf-tcp
            port: 12201
      udp:
        service:
          type: ClusterIP
        ports:
          - name: gelf-udp
            port: 12201
    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: nginx
        kubernetes.io/tls-acme: "true"
      hosts:
        - graylog.api.vertigo.com.br
      tls:
        - hosts:
          - graylog.api.vertigo.com.br
          secretName: graylog-vkpr-cert

loki-stack:
  enabled: true

#
# MONITORING STACK
#
prometheus-operator:
  enabled: true
  prometheusOperator:
    createCustomResource: false
  grafana:
    image:
      repository: vertigo/grafana
      tag: 7.0.0
    adminPassword: "vertigo"
    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: nginx
        kubernetes.io/tls-acme: "true"
      hosts: ["grafana.api.vertigo.com.br"]
      tls:
      - hosts:
        - grafana.api.vertigo.com.br
        secretName: grafana-vkpr-cert

    grafana.ini:
      server:
        root_url: "https://grafana.api.vertigo.com.br"
      auth.generic_oauth:
        enabled: true
        scopes: openid profile email
        client_id: grafana
        # temporario -->
        client_secret: "41164d74-9a80-4fd4-a4ef-9496455b53f4"
        # <--
        auth_url: http://keycloak.api.vertigo.com.br/auth/realms/vkpr/protocol/openid-connect/auth
        token_url: http://keycloak.api.vertigo.com.br/auth/realms/vkpr/protocol/openid-connect/token
        api_url: http://keycloak.api.vertigo.com.br/auth/realms/vkpr/protocol/openid-connect/userinfo
        allowed_domains: api.vertigo.com.br vertigo.com.br
        allow_sign_up: true

# BEATS - INICO
# NAO FUNCIONA AINDA (BEATS)
# metric-beat embutido (sem subchart)
# metricbeat:
#  enabled: false
# metrics-server:
#   enabled: false
#   rbac:
#     create: true
#   args: ["--v=4","--kubelet-preferred-address-types=InternalIP","--kubelet-insecure-tls"]
#   hostNetwork:
#     enabled: true
# kube-state-metrics:
#   enabled: false
# BEATS - FIM

#
# SECURITY STACK
#

vault:
  enabled: false
  server:
    ha:
      enabled: true
      raft:
        enabled: true
#    dev:
#      enabled: true

keycloak:
  enabled: true
  keycloak:
    username: keycloak
    password: admin123
    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: nginx
        kubernetes.io/tls-acme: "true"
      hosts:
        - keycloak.api.vertigo.com.br
      tls:
        - hosts:
          - keycloak.api.vertigo.com.br
          secretName: keycloak-vkpr-cert
    extraVolumes: |
      - name: keycloak-data
        persistentVolumeClaim:
          claimName: keycloak-data-volume
      - name: vkpr-realm-secret
        secret:
          secretName: vkpr-realm-secret
    extraVolumeMounts: |
      - name: keycloak-data
        mountPath: "/opt/jboss/keycloak/standalone/data"
        readOnly: false
      - name: vkpr-realm-secret
        mountPath: "/realm/"
        readOnly: true
    extraArgs: -Dkeycloak.import=/realm/vkpr-realm.json

# BACKUP STACK
velero:
  enabled: false
  image:
    repository: velero/velero
    tag: v1.2.0
    pullPolicy: IfNotPresent
  configuration:
    provider: aws
    backupStorageLocation:
      name: aws
      bucket: <BUCKET_NAME>
      prefix:
      config: 
        region: <BUCKET_REGION>
    volumeSnapshotLocation:
      name: aws
      config:
        region: <BUCKET_REGION>
  credentials:
    useSecret: true
    existingSecret:
    secretContents:
      cloud: |
        [default]
        aws_access_key_id=<ACCESS_KEY_ID>
        aws_secret_access_key=<SECRET_KEY_ID>
