{{- if index .Values "cert-manager" "enabled" -}}
apiVersion: cert-manager.io/v1alpha2
kind: ClusterIssuer
metadata:
  name: letsencrypt-staging
spec:
  acme:
    # You must replace this email address with your own.
    # Let's Encrypt will use this to contact you about expiring
    # certificates, and issues related to your account.
    email: {{ .Values.acme.email }}
    server: https://acme-staging-v02.api.letsencrypt.org/directory
    privateKeySecretRef:
      # Secret resource used to store the account's private key.
      name: acme-staging-issuer-account-key
    {{- with .Values.acme.solvers }}
    solvers:
      {{- toYaml . | nindent 4 }}
    {{- end }}
    # Add a single challenge solver, HTTP01 using nginx
    #solvers:
    #- http01:
    #    ingress:
    #      class: nginx
    #- http01:
    #    ingress:
    #      class: kong

---
apiVersion: cert-manager.io/v1alpha2
kind: ClusterIssuer
metadata:
  name: letsencrypt-production
spec:
  acme:
    # You must replace this email address with your own.
    # Let's Encrypt will use this to contact you about expiring
    # certificates, and issues related to your account.
    email: {{ .Values.acme.email }}
    server: https://acme-v02.api.letsencrypt.org/directory
    privateKeySecretRef:
      # Secret resource used to store the account's private key.
      name: acme-production-issuer-account-key
    {{- with .Values.acme.solvers }}
    solvers:
      {{- toYaml . | nindent 4 }}
    {{- end }}
    # Add a single challenge solver, HTTP01 using nginx
    #solvers:
    #- http01:
    #    ingress:
    #      class: nginx
    # KONG: solucao sera criar um clusterissuer para ele, remover isto abaixo depois
    #- http01:
    #    ingress:
    #      class: kong
{{- end -}}
